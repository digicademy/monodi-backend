imports:
    - { resource: parameters.yml }
    - { resource: security.yml }

framework:
    #esi:             ~
    translator:       ~
    #translator:      { fallback: %locale% }
    secret:          %secret%
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: %kernel.debug%
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig', 'php']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_proxies: ~
    session:         ~
    fragments:       ~

# Twig Configuration
twig:
    debug:            %kernel.debug%
    strict_variables: %kernel.debug%
#    exception_controller: 'FOS\RestBundle\Controller\ExceptionController::showAction'

# Assetic Configuration
assetic:
    debug:          %kernel.debug%
    use_controller: false
    bundles:        [ MopaBootstrapBundle, DigitalwertMonodiFrontendBundle, DigitalwertMonodiClientBundle, DigitalwertMonodiAdminBundle]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: %kernel.root_dir%/Resources/java/compiler.jar
        #yui_css:
        #    jar: %kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar
#        compass:
#            sass: /usr/local/bin/compass
#            apply_to: "\.(scss|sass)$"
        sass:
            bin: /usr/local/bin/sass
            apply_to: "\.sass$"
        scss:
            sass: /usr/local/bin/sass
            apply_to: "\.scss$"        
        yui_css:
            jar: %kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar
            apply_to: "\.css$"
        yui_js:
            jar: %kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar

# Doctrine Configuration
doctrine:
    dbal:
        driver:   %database_driver%
        host:     %database_host%
        port:     %database_port%
        dbname:   %database_name%
        user:     %database_user%
        password: %database_password%
        charset:  UTF8
        # if using pdo_sqlite as your database driver, add the path in parameters.yml
        # e.g. database_path: %kernel.root_dir%/data/data.db3
        # path:     %database_path%

    orm:
        auto_generate_proxy_classes: %kernel.debug%
        auto_mapping: true
        mappings:
            #Gedmo-Doctrine Extension
            gedmo_translatable:
                type: annotation
                prefix: Gedmo\Translatable\Entity
                dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translatable/Entity"
                alias: GedmoTranslatable # this one is optional and will default to the name set for the mapping
                is_bundle: false
            gedmo_translator:
                type: annotation
                prefix: Gedmo\Translator\Entity
                dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translator/Entity"
                alias: GedmoTranslator # this one is optional and will default to the name set for the mapping
                is_bundle: false
            gedmo_loggable:
                type: annotation
                prefix: Gedmo\Loggable\Entity
                dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Loggable/Entity"
                alias: GedmoLoggable # this one is optional and will default to the name set for the mapping
                is_bundle: false
            gedmo_tree:
                type: annotation
                prefix: Gedmo\Tree\Entity
                dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/Entity"
                alias: GedmoTree # this one is optional and will default to the name set for the mapping
                is_bundle: false

# Swiftmailer Configuration
swiftmailer:
    transport: %mailer_transport%
    host:      %mailer_host%
    username:  %mailer_user%
    password:  %mailer_password%
    spool:     { type: memory }
# Services    
services:
    kernel.listener.monodi_api_exception_listener:
        class: Digitalwert\Symfony2\Bundle\Monodi\ApiBundle\EventListener\ApiExceptionListener
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException }
# Twitter-Bootstrap
mopa_bootstrap:
    form:
        show_legend: false # default is true
        show_child_legend: false # default is true
        error_type: block # or inline which is default
    
# ApiDoc
# @see http://knpbundles.com/nelmio/NelmioApiDocBundle
nelmio_api_doc:
    name: Monodi-Api Version 1
    sandbox:
        authentication:
            name: access_token
            delivery: query # query or http_basic are supported
#            custom_endpoint: true # default false, if true, your user will be able to specify its own endpoint
        enabled:  true
#        endpoint: http://sandbox.example.com/ # default: /app_dev.php, use this parameter to define which URL to call through the sandbox
        accept_type: application/json
#
#
fos_user:
    db_driver: orm
    firewall_name: main
    use_listener: true
    user_class: Digitalwert\Symfony2\Bundle\Monodi\CommonBundle\Entity\User
    group:
        group_class: Digitalwert\Symfony2\Bundle\Monodi\CommonBundle\Entity\Group
        form:
          type: digitalwert_monodi_admin_grouptype
# REST
# @see https://github.com/FriendsOfSymfony/FOSRestBundle/blob/master/Resources/doc/index.md
fos_rest:
    param_fetcher_listener: true
    body_listener: true
    format_listener: true
    routing_loader:
        default_format: json
    view:
        view_response_listener: 'force'
        formats:
            text: false
            rss: false
            xml: true
            json: true
            html: false
        templating_formats:
            html: true
        force_redirects:
            html: true
        failed_validation: HTTP_BAD_REQUEST
    format_listener:
        default_priorities: ['json', 'xml', html, '*/*']
        fallback_format: json
#        prefer_extension: true
#    body_listener:
#        decoders:
#            json: fos_rest.decoder.json

#simple_things_form_serializer:
#    include_root_in_json: false
#    application_xml_root_name: ~
#    naming_strategy: camel_case
#    encoders:
#        xml: true
#        json: true

sensio_framework_extra:
    view:    { annotations: false }
    router:  { annotations: true }
    
# Gedmo Doctrine Extension
# https://github.com/stof/StofDoctrineExtensionsBundle/blob/master/Resources/doc/index.rst
stof_doctrine_extensions:
    default_locale: de_DE
    orm:
        default:
          tree: true
          timestampable: true
          sluggable: true
# Di
# http://jmsyst.com/bundles/JMSDiExtraBundle/master/configuration
jms_di_extra:
    automatic_controller_injections:
        properties:
            request: "@request"
            router: "@router"

        method_calls:
            setRouter: ["@router"]
    locations:
        all_bundles: false
        bundles: [ DigitalwertMonodiAdminBundle, DigitalwertMonodiApiBundle, DigitalwertMonodiClientBundle, DigitalwertMonodiCommonBundle, DigitalwertMonodiDummyBundle, DigitalwertMonodiFrontendBundle, DigitalwertMonodiOAuthServerBundle, DigitalwertMonodiUserBundle ]
        directories: [ "%kernel.root_dir%/../src" ]
# OAUTH2
# https://github.com/FriendsOfSymfony/FOSOAuthServerBundle/blob/master/Resources/doc/index.md
fos_oauth_server:
    db_driver:           orm       
    client_class:        Digitalwert\Symfony2\Bundle\Monodi\OAuthServerBundle\Entity\Client
    access_token_class:  Digitalwert\Symfony2\Bundle\Monodi\OAuthServerBundle\Entity\AccessToken
    refresh_token_class: Digitalwert\Symfony2\Bundle\Monodi\OAuthServerBundle\Entity\RefreshToken
    auth_code_class:     Digitalwert\Symfony2\Bundle\Monodi\OAuthServerBundle\Entity\AuthCode
    service:
        user_provider: fos_user.user_manager
#
#
misd_guzzle:
    service_builder:
        class:              "Guzzle\Service\Builder\ServiceBuilder"
        configuration_file: "%kernel.root_dir%/config/webservices.json"
#
#
digitalwert_monodi_common:
    git:
        remote:
            uri: "ssh://petzold@adwserv9.adwmainz.net:7022/var/git/test.git"
        local:
          base: "%kernel.root_dir%/../git"
        ssh:
          cmd: "%kernel.root_dir%/Resources/sh/git-ssh.sh"
          key_file: "%kernel.root_dir%/config/ssh/webserver.rsa"
    existdb:
        uri: "https://adwserv9.adwmainz.net/exist/rest/db/"
        username: monodi
        password: tLZ5BölTwq!qdUög
